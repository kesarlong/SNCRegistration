@model SNCRegistration.ViewModels.Participant
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Participant Information</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <!--TO DO remove in form Need to auto populate for the child record-->
        @Html.LabelFor(model => model.GuardianID, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.GuardianID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantID, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.DisplayFor(model => model.ParticipantID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantID, "", new { @class = "text-danger" })
        <br /><br />    
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.ParticipantFirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantFirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantLastName, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.ParticipantLastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantLastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantAge, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.ParticipantAge, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantAge, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <!--TO DO need to link attending code to code table **in all tables**-->
        @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.AttendingCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantSchool, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.ParticipantSchool, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantSchool, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantTeacher, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.EditorFor(model => model.ParticipantTeacher, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantTeacher, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassroomScouting, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.RadioButtonFor(model => model.ClassroomScouting, true, new { id = "radio_ClassroomScouting_True" }) Yes
        @Html.RadioButtonFor(model => model.ClassroomScouting, false, new { id = "radio_ClassroomScouting_False" }) No
        @Html.ValidationMessageFor(model => model.ClassroomScouting, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Returning, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.RadioButtonFor(model => model.Returning, true, new { id = "radio_Returning_True" }) Yes
        @Html.RadioButtonFor(model => model.Returning, false, new { id = "radio_Returning_False" }) No
        @Html.ValidationMessageFor(model => model.Returning, "", new { @class = "text-danger" })
    </div>

    <div>
        <!--set default values for fields not set in initial form-->
        @Html.HiddenFor(model => model.HealthForm, new { value = false })
        @Html.HiddenFor(model => model.PhotoAck, new { value = false })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
        @Html.TextArea("Comments", null, new { @class = "form-control" })  
        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
    </div>

    <hr />

    <div class="form-group pull-right">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
}
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}