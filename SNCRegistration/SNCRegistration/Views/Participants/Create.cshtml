@model SNCRegistration.ViewModels.Participant

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()


    <h4>Participant Information</h4>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

   
    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <!--TO DO remove in form Need to auto populate for the child record-->
                @Html.LabelFor(model => model.GuardianID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.GuardianID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GuardianID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                <!--TO DO Erika: change to auto number PK-->
                @Html.LabelFor(model => model.ParticipantID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ParticipantID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipantID, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                @Html.LabelFor(model => model.ParticipantFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ParticipantFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipantFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.ParticipantLastName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ParticipantLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipantLastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.ParticipantAge, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ParticipantAge, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipantAge, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <!--TO DO need to link attending code to code table **in all tables**-->
                @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.AttendingCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="col-md-6">
            <div class="row">
                @Html.LabelFor(model => model.ParticipantSchool, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ParticipantSchool, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipantSchool, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.ParticipantTeacher, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ParticipantTeacher, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipantTeacher, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--set initial value for classroom scouting to false-->
           @* @Html.HiddenFor(model => model.ClassroomScouting, new { value = false })*@

            <div class="row">
                @Html.LabelFor(model => model.ClassroomScouting, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.CheckBoxFor(model => model.ClassroomScouting, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassroomScouting, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.Label("New / Returning", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <!--TO DO: ADD FIELD WHEN CREATED IN DATABASE-->
                    @Html.Label("<<NEW FIELD>>", htmlAttributes: new { @class = "control-label col-md-9" })
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.HealthForm, new { value = false})
    @Html.HiddenFor(model => model.PhotoAck, new { value = false })

    <div class="row">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>



        <hr />

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
