@model SNCRegistration.ViewModels.FamilyMember

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Additional Attendees</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--TO DO remove in form Manually populate during initial development-->
    <div class="row">
        <div class="col-md-6">
            <div class="row">

                @Html.LabelFor(model => model.FamilyMemberID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.FamilyMemberID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FamilyMemberID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                @Html.LabelFor(model => model.GuardianID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.GuardianID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GuardianID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-6">
            <div class="row">
                @Html.LabelFor(model => model.FamilyMemberFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.FamilyMemberFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FamilyMemberFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.FamilyMemberLastName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.FamilyMemberLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FamilyMemberLastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="col-md-6">
            <div class="row">
                @Html.Label("Age", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <!--TO DO: ADD FIELD WHEN CREATED IN DATABASE-->
                    @Html.Label("<<NEW FIELD>>", htmlAttributes: new { @class = "control-label col-md-9" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.AttendingCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>

        <div class="row">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
