@model SNCRegistration.ViewModels.Participant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";

}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="form-horizontal">*@
        <h4>Participant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ParticipantID)

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipantFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ParticipantFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParticipantFirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipantLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ParticipantLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParticipantLastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipantAge, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ParticipantAge, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParticipantAge, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipantSchool, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ParticipantSchool, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParticipantSchool, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipantTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ParticipantTeacher, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParticipantTeacher, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.ClassroomScouting, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.ClassroomScouting, "", new { @class = "text-danger" })  
                @if (Model.ClassroomScouting == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.ClassroomScouting, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.ClassroomScouting, "False", new { name = "ClassroomScouting" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.ClassroomScouting, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.ClassroomScouting, "False", new { name = "ClassroomScouting" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.HealthForm, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.HealthForm, "", new { @class = "text-danger" })
                @if (Model.HealthForm == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.HealthForm, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.HealthForm, "False", new { name = "ClassroomScouting" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.HealthForm, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.HealthForm, "False", new { name = "ClassroomScouting" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.PhotoAck, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.PhotoAck, "", new { @class = "text-danger" })
                @if (Model.PhotoAck == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.PhotoAck, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.PhotoAck, "False", new { name = "ClassroomScouting" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.PhotoAck, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.PhotoAck, "False", new { name = "ClassroomScouting" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.AttendingCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.CheckedIn, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.CheckedIn, "", new { @class = "text-danger" })
                @if (Model.CheckedIn == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.CheckedIn, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.CheckedIn, "False", new { name = "ClassroomScouting" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.CheckedIn, "True", new { name = "ClassroomScouting" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.CheckedIn, "False", new { name = "ClassroomScouting" }) No
                    </label>

                }
            </div>
        </div>


        <hr />

            <div class="form-group pull-left">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>

            <div class="form-group pull-right">
                <input type="button" value="Cancel/Back to Participant Details" class="btn btn-danger" onclick="history.back();"  />
            </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
