@model SNCRegistration.ViewModels.Participant
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h3>Participant Information</h3><hr />  
    <h5><font color="red">You must enter a value unless the field is marked as Optional</font></h5>
    <p>

        If you selected this form in error, the Cancel button will allow you to select a different form.<br />
        <font color="grey">
            Enter information for the participant attending camp then select your next action:<br />
            &nbsp;&nbsp;&nbsp;1.  Complete Registration if no additional registrations needed.<br />
            &nbsp;&nbsp;&nbsp;2.  Add Another Participant if there is another participant attending.<br />
            &nbsp;&nbsp;&nbsp;3.  Add a Family Member to register additional family attending the event.<br />

        </font>
    </p>
    <hr />
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    //added back for cancel feature
    @Html.HiddenFor(model => model.GuardianGuid, new { @Value = Session["gSession"] })

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantFirstName, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.ParticipantFirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantFirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantLastName, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.ParticipantLastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantLastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantAge, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.ParticipantAge, ViewBag.ParticipantAge as SelectList, "-Select option-", new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.ParticipantAge, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.AttendingCode,
            ViewBag.Attendance as SelectList, "-Select option-", new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantSchool, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.ParticipantSchool, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantSchool, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParticipantTeacher, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.ParticipantTeacher, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ParticipantTeacher, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="btn-group" data-toggle="buttons">
            @Html.Label("Participant in classroom scouting?")<br />
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.ClassroomScouting, true, new { id = "radio_ClassroomScouting_True" }) Yes
            </label>
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.ClassroomScouting, false, new { id = "radio_ClassroomScouting_False" }) No
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.ClassroomScouting, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="btn-group" data-toggle="buttons">
            @Html.Label("Is this your first time at camp?")<br />
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.Returning, true, new { id = "radio_returning_true" }) Yes
            </label>
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.Returning, false, new { id = "radio_returning_false" }) No
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.Returning, "", new { @class = "text-danger" })
    </div>

    <div>
        <!--set default values for fields not set in initial form-->
        @Html.HiddenFor(model => model.HealthForm, new { @Value = false })
        @Html.HiddenFor(model => model.PhotoAck, new { @Value = false })
        @Html.HiddenFor(model => model.PhotoAck, new { @Value = false })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
    </div>

    <hr />

    //Buttons to direct next form action

    //complete registration
    <div class="form-group pull-left">
        <input type="submit" name="submit" id="Complete" value="Complete registration" class="btn btn-primary" />
    </div>


    //add another participant
    <div class="form-group pull-left">
        <input type="submit" name="submit" id="addParticipant" value="Add another participant" class="btn btn-primary" />
    </div>

    //add a family member (non-participant) attendig
    <div class="form-group pull-left">
        <input type="submit" name="submit" id="AddFamily" value="Add a family member" class="btn btn-primary" />
    </div>



    <div class="form-group pull-right">
        <input type="button" name="Cancel" id="Cancel" value="Cancel" class="btn btn-danger" onclick="@("window.location.href='" + @Url.Action("Redirect", "Participants") + "'");" />
        @*<input type="submit" name="Cancel" id="Cancel" value="Cancel" class="btn btn-danger" />*@
    </div>
}

@section Scripts
        {
    @Scripts.Render("~/bundles/jqueryval")
}
