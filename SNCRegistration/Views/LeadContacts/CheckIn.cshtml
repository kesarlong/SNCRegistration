@model SNCRegistration.ViewModels.LeadContact

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

<h2>Check In Lead Contact</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LeadContactID)

        <dl class="dl-horizontal">
            <dt>
                <p>Lead Contact Name </p>
            </dt>
            <dd>
                @Html.DisplayFor(model => model.LeadContactFirstName) @Html.DisplayFor(model => model.LeadContactLastName)
                @Html.ValidationMessageFor(model => model.LeadContactFirstName, "", new { @class = "text-danger" })
            </dd>

            <dt>
                <p>Lead Contact Address </p>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LeadContactAddress) <br />
                @Html.DisplayFor(model => model.LeadContactCity), @*@Html.DisplayFor(model => model.LeadContactState)*@ @Html.DisplayFor(model => model.LeadContactZip)
                @Html.ValidationMessageFor(model => model.LeadContactAddress, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.LeadContactCity, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.LeadContactState, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.LeadContactZip, "", new { @class = "text-danger" })

            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LeadContactCellPhone)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LeadContactCellPhone)
                @Html.ValidationMessageFor(model => model.LeadContactCellPhone, "", new { @class = "text-danger" })
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.LeadContactEmail)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LeadContactEmail)
                @Html.ValidationMessageFor(model => model.LeadContactEmail, "", new { @class = "text-danger" })
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UnitChapterNumber)
            </dt>

            <dt>
                @Html.DisplayNameFor(model => model.BSType)
            </dt>
            <dd>
                @if (Model.BSType == 1)
                {<p>Individual</p>}
                else if (Model.BSType == 2)
                {<p>Troop</p>}
                else if (Model.BSType == 3)
                {<p>Troop - WoodBridge</p>}
                else if (Model.BSType == 4)
                {<p>OA Chapter: Apieka - Alachua District</p>}
                else if (Model.BSType == 5)
                {<p>OA Chapter: Seminole - Baden Powell District</p>}
                else if (Model.BSType == 6)
                {<p>OA Chapter: Timucuan - Black Creek District</p>}
                else if (Model.BSType == 7)
                {<p>OA Chapter: Oglala - Great Muskogee District</p>}
                else if (Model.BSType == 8)
                {<p>OA Chapter: Oklawaha - Marion District</p>}
                else if (Model.BSType == 9)
                {<p>OA Chapter: Osceola - Osceola & Timucua Districts</p>}
                else if (Model.BSType == 10)
                {<p>OA Chapter: Elemukulek - River Bend District</p>}
                else if (Model.BSType == 11)
                {<p>OA Chapter: Saturiwa - Shawnee District</p>}
                else if (Model.BSType == 12)
                {<p>OA Chapter: Onathequa - Suwannee River District</p>}
            </dd>

            <dd>
                @Html.DisplayFor(model => model.UnitChapterNumber)
                @Html.ValidationMessageFor(model => model.UnitChapterNumber, "", new { @class = "text-danger" })
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.VolunteerAttendingCode)
            </dt>

            <dd>
                @if (Model.VolunteerAttendingCode == 1)
                {
                    <p>Friday Evening Only</p>
                }
                else if (Model.VolunteerAttendingCode == 2)
                {
                    <p>Saturday Only</p>
                }
                else if (Model.VolunteerAttendingCode == 4)
                {
                    <p>Friday through Sunday</p>
                }
                @Html.ValidationMessageFor(model => model.VolunteerAttendingCode, "", new { @class = "text-danger" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.SaturdayDinner)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SaturdayDinner)
                @Html.ValidationMessageFor(model => model.SaturdayDinner, "", new { @class = "text-danger" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TotalFee)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TotalFee)
                @Html.ValidationMessageFor(model => model.TotalFee, "", new { @class = "text-danger" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Booth)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Booth)
                @Html.ValidationMessageFor(model => model.Booth, "", new { @class = "text-danger" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Comments)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Comments)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LeadContactShirtOrder)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LeadContactShirtOrder)
                @Html.ValidationMessageFor(model => model.LeadContactShirtOrder, "", new { @class = "text-danger" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LeadContactShirtSize)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LeadContactShirtSize)
                @Html.ValidationMessageFor(model => model.LeadContactShirtSize, "", new { @class = "text-danger" })
            </dd>


            <dt>
                @Html.DisplayNameFor(model => model.CheckedIn)
                @Html.ValidationMessageFor(model => model.CheckedIn, "", new { @class = "text-danger" })
            </dt>

            <dd>
                <div class="btn-group" data-toggle="buttons">

                    @if (Model.CheckedIn == true)
                    {
                        <label class="btn btn-default active">
                            @Html.RadioButtonFor(model => model.CheckedIn, "True", new { name = "CheckedIn" }) Yes
                        </label>
                        <label class="btn btn-default">
                            @Html.RadioButtonFor(model => model.CheckedIn, "False", new { name = "CheckedIn" }) No
                        </label>
                    }
                    else
                    {
                        <label class="btn btn-default">
                            @Html.RadioButtonFor(model => model.CheckedIn, "True", new { name = "CheckedIn" }) Yes
                        </label>
                        <label class="btn btn-default active">
                            @Html.RadioButtonFor(model => model.CheckedIn, "False", new { name = "CheckedIn" }) No
                        </label>

                    }
                </div>

            </dd>

        </dl>

    </div>
        <p align="right">
            <div align="right" style="margin-right:20px;">
                <input type="submit" value="Save" class="btn btn-primary" /> |
                @Html.ActionLink("Edit", "Edit", new { id = Model.LeadContactID }, new { @class = "btn btn-info" }) |
                @Html.ActionLink("Back to Lead Contact Search", "Index", "LeadContacts", new { SearchString = Session["SessionSearchString"], sortOrder = Session["SessionSortOrder"], currentFilter = Session["SessionCurrentFilter"], searchYear = Session["SessionSearchYear"], page = Session["SessionPage"] }, new { @class = "btn btn-info" })
            </div>
        </p>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
