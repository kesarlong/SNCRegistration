<script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>
<script type="text/javascript">
    //require t-shirt size if selected that ordering t-shirt
    $(document).ready(function () {
        $("#ShirtSize").hide();

        $("#ShirtOrder").change(function () {
            var status = ($('input[name=LeadContactShirtOrder]:checked').val());
            if ($('input[name=LeadContactShirtOrder]:checked').val() == 'True') {
                $("#ShirtSize").show();
            }
            else {
                $("#ShirtSize").hide()

            }
        });
    });
</script>

<script type="text/javascript">
    //hide Satuday Dinner field if selected that attending Friday only or Saturday
    $(document).ready(function () {
        $("#Dinner").hide();
        $("#Attending").change(function () {
            $(this).find("option:selected").each(function () {
                var optValue = $(this).attr("value");
                if (optValue == 2) {
                    $("#Dinner").show();

                } else {
                    $("#Dinner").hide();
                    
                }
            });
        }).change();
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#UnitChapterNumber").hide();
        $("#BSType").change(function () {
            $(this).find("option:selected").each(function () {
                var optionValue = $(this).attr("value");
                if (optionValue >= 3) {
                    $("#UnitChapterNumber").hide();
                   
                } else {
                    $("#UnitChapterNumber").show();
                }
            });
        }).change();
    });

</script>

@using System.Collections.Generic;

@model SNCRegistration.ViewModels.LeadContact
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutL_Register.cshtml";
}

@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

    <h4>Leader Information</h4><hr />
    <h5><font color="red">All fields not indicated as optional are required</font></h5>
    <p>
        <font color="grey">
            1. For Troop/Chapter leaders:<br />
            <p style="text-indent: 20px">a. Enter information for the adult responsible for the group being registered.<br />
            <p style="text-indent: 20px">b. Add volunteer button will save your input and bring you to the volunteer registration.<br />
            <p style="text-indent: 20px">c. Additional volunteers may be registered following leader registration. <br />
            2. For Individuals:
            <p style="text-indent: 20px">a. Enter information for the adult being registered.<br />
            <p style="text-indent: 20px">b. Complete registration button will save your input and complete the registration process.<br />
            <p style="text-indent: 20px">c. IF YOU NEED TO REGISTER AN INDIVIDUAL CHILD VOLUNTEER, PLEASE CALL 904-555-1234. <br />
    <br />
    </font>
</p>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <!-- <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LeadContactID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.LeadContactID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LeadContactID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    -->
    @Html.LabelFor(model => model.LeadContactFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">

        <div class="col-md-9">
            @Html.EditorFor(model => model.LeadContactFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LeadContactFirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    @Html.LabelFor(model => model.LeadContactLastName, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">

        <div class="col-md-9">
            @Html.EditorFor(model => model.LeadContactLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LeadContactLastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    @Html.LabelFor(model => model.LeadContactAddress, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">

        <div class="col-md-9">
            @Html.EditorFor(model => model.LeadContactAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LeadContactAddress, "", new { @class = "text-danger" })
        </div>
    </div>
            <br />
            @Html.LabelFor(model => model.LeadContactCity, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="row">

                <div class="col-md-9">
                    @Html.EditorFor(model => model.LeadContactCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeadContactCity, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.LeadContactState, htmlAttributes: new { @class = "control-label" })<br />
                @Html.DropDownListFor(model => model.LeadContactState,
             new List<SelectListItem>
             {
                 new SelectListItem() {Text="Alabama", Value="AL"},
                    new SelectListItem() { Text="Alaska", Value="AK"},
                    new SelectListItem() { Text="Arizona", Value="AZ"},
                    new SelectListItem() { Text="Arkansas", Value="AR"},
                    new SelectListItem() { Text="California", Value="CA"},
                    new SelectListItem() { Text="Colorado", Value="CO"},
                    new SelectListItem() { Text="Connecticut", Value="CT"},
                    new SelectListItem() { Text="District of Columbia", Value="DC"},
                    new SelectListItem() { Text="Delaware", Value="DE"},
                    new SelectListItem() { Text="Florida", Value="FL", Selected=true},
                    new SelectListItem() { Text="Georgia", Value="GA"},
                    new SelectListItem() { Text="Hawaii", Value="HI"},
                    new SelectListItem() { Text="Idaho", Value="ID"},
                    new SelectListItem() { Text="Illinois", Value="IL"},
                    new SelectListItem() { Text="Indiana", Value="IN"},
                    new SelectListItem() { Text="Iowa", Value="IA"},
                    new SelectListItem() { Text="Kansas", Value="KS"},
                    new SelectListItem() { Text="Kentucky", Value="KY"},
                    new SelectListItem() { Text="Louisiana", Value="LA"},
                    new SelectListItem() { Text="Maine", Value="ME"},
                    new SelectListItem() { Text="Maryland", Value="MD"},
                    new SelectListItem() { Text="Massachusetts", Value="MA"},
                    new SelectListItem() { Text="Michigan", Value="MI"},
                    new SelectListItem() { Text="Minnesota", Value="MN"},
                    new SelectListItem() { Text="Mississippi", Value="MS"},
                    new SelectListItem() { Text="Missouri", Value="MO"},
                    new SelectListItem() { Text="Montana", Value="MT"},
                    new SelectListItem() { Text="Nebraska", Value="NE"},
                    new SelectListItem() { Text="Nevada", Value="NV"},
                    new SelectListItem() { Text="New Hampshire", Value="NH"},
                    new SelectListItem() { Text="New Jersey", Value="NJ"},
                    new SelectListItem() { Text="New Mexico", Value="NM"},
                    new SelectListItem() { Text="New York", Value="NY"},
                    new SelectListItem() { Text="North Carolina", Value="NC"},
                    new SelectListItem() { Text="North Dakota", Value="ND"},
                    new SelectListItem() { Text="Ohio", Value="OH"},
                    new SelectListItem() { Text="Oklahoma", Value="OK"},
                    new SelectListItem() { Text="Oregon", Value="OR"},
                    new SelectListItem() { Text="Pennsylvania", Value="PA"},
                    new SelectListItem() { Text="Rhode Island", Value="RI"},
                    new SelectListItem() { Text="South Carolina", Value="SC"},
                    new SelectListItem() { Text="South Dakota", Value="SD"},
                    new SelectListItem() { Text="Tennessee", Value="TN"},
                    new SelectListItem() { Text="Texas", Value="TX"},
                    new SelectListItem() { Text="Utah", Value="UT"},
                    new SelectListItem() { Text="Vermont", Value="VT"},
                    new SelectListItem() { Text="Virginia", Value="VA"},
                    new SelectListItem() { Text="Washington", Value="WA"},
                    new SelectListItem() { Text="West Virginia", Value="WV"},
                    new SelectListItem() { Text="Wisconsin", Value="WI"},
                    new SelectListItem() { Text="Wyoming", Value="WY"}
                    }, new { @class = "form-control", style = "width: 220px" })
                @Html.ValidationMessageFor(model => model.LeadContactState, "", new { @class = "text-danger" })
            </div>
            <br />
            @Html.LabelFor(model => model.LeadContactZip, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="row">

                <div class="col-md-9">
                    @Html.EditorFor(model => model.LeadContactZip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeadContactZip, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            @Html.LabelFor(model => model.LeadContactCellPhone, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="row">

                <div class="col-md-9">
                    @Html.EditorFor(model => model.LeadContactCellPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeadContactCellPhone, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            @Html.LabelFor(model => model.LeadContactEmail, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="row">

                <div class="col-md-9">
                    @Html.EditorFor(model => model.LeadContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeadContactEmail, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @*to do: remove after tested*@

                @*<div class="btn-group" data-toggle="buttons">*@
                @*@Html.LabelFor(model => model.Marketing, htmlAttributes: new { @class = "control-label" })<br />*@
                @*<label class="control-label" for="Marketing">Do you want to receive notification of upcoming events?</label><br/>*@
                @*<label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.Marketing, true, new { @checked = "checked" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.Marketing, false) No
                    </label>*@

                <div class="btn-group" data-toggle="buttons" id="marketing">
                    <label class="control-label" for="Marketing">Do you want to receive notification of upcoming events?</label><br />
                    <label id="chkYes" label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.Marketing, true, new { @id = "chkYes", @name = "marketing" }) Yes
                    </label>
                    <label id="chkNo" label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.Marketing, false, new { @id = "chkNo", @name = "marketing" }) No
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.Marketing, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="btn-group" data-toggle="buttons" id="ShirtOrder">
                    @Html.LabelFor(model => model.LeadContactShirtOrder, htmlAttributes: new { @class = "control-label" })<br />
                    <label id="chkYes" label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.LeadContactShirtOrder, true, new { @id = "chkYes", @name = "reqShirt" }) Yes
                    </label>
                    <label id="chkNo" label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.LeadContactShirtOrder, false, new { @id = "chkNo", @name = "reqShirt" }) No
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.LeadContactShirtOrder, "", new { @class = "text-danger" })
            </div>
            <br />

            @*//set t-shirt value to no shirt default
            <div>
                @Html.HiddenFor(model => model.LeadContactShirtSize, new { @Value = "00" })
            </div>*@

            //user will select shirt size if select to order a t-shirt
            <div class="form-group" id="ShirtSize">
                @Html.LabelFor(model => model.LeadContactShirtSize, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownListFor(model => model.LeadContactShirtSize,
                            ViewBag.ShirtSizes as SelectList,new { @class = "form-control", style = "width: 200px" })
                @Html.ValidationMessageFor(model => model.LeadContactShirtSize, "", new { @class = "text-danger" })
            </div>

            <br />
            <div class="form-group" id="BSType">
                @Html.LabelFor(model => model.BSType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.BSType,
                        ViewBag.BSType as SelectList, "- Select option - "
                        //new List<SelectListItem>{
                        //    new SelectListItem{ Value = "", Text = "-Select Type-" },
                        //    new SelectListItem{ Value = "1", Text = "Troop/Crew" },
                        //    new SelectListItem{ Value = "2", Text = "OA Chapter" },
                        //    new SelectListItem{ Value = "3", Text = "Individual" }
                        , new { @class = "form-control", style = "width: 200px" })
                @Html.ValidationMessageFor(model => model.BSType, "", new { @class = "text-danger" })
            </div>
                    <br />
                    <div class="row" id="UnitChapterNumber">
                        @Html.LabelFor(model => model.UnitChapterNumber, htmlAttributes: new { @class = "control-label col-md-3" })

                        <div class="col-md-9">
                            @Html.EditorFor(model => model.UnitChapterNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitChapterNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group" id="Attending">
                        @Html.LabelFor(model => model.VolunteerAttendingCode, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.VolunteerAttendingCode,
                        ViewBag.Attendance as SelectList, "- Select option - ", new { @class = "form-control", style = "width: 200px" })
                        @Html.ValidationMessageFor(model => model.VolunteerAttendingCode, "", new { @class = "text-danger" })
                    </div>
                    <br />

                    <div class="form-group" id="Dinner">
                        <div class="btn-group" data-toggle="buttons">
                            @Html.LabelFor(model => model.SaturdayDinner, htmlAttributes: new { @class = "control-label" })<br />
                            <label class="btn btn-default">
                                @Html.RadioButtonFor(model => model.SaturdayDinner, true, new { id = "saturday_Dinner_True" }) Yes
                            </label>
                            <label class="btn btn-default">
                                @Html.RadioButtonFor(model => model.SaturdayDinner, false, new { id = "saturday_Dinner_False", @checked = true }) No 
                            </label>
                       </div>
                        @Html.ValidationMessageFor(model => model.SaturdayDinner, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    @Html.LabelFor(model => model.Booth, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="row">
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Booth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Booth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div>
                        <!--set default values for fields not set in initial form-->
                        @Html.HiddenFor(model => model.LeaderGuid, new { @Value = 0 })
                        @Html.HiddenFor(model => model.TotalFee, new { @Value = 0 })
                        @Html.HiddenFor(model => model.EventYear, new { @Value = 0 })
                        @Html.HiddenFor(model => model.CheckedIn, new { @value = 0 })
                    </div>

                    <hr />
                    <div class="form-group pull-right">
                        <input type="reset" value="Reset Form" class="btn btn-danger" onsubmit="Dispose" />
                    </div>

                    <div class="form-group pull-left">
                        <input type="submit" name="submit" id="Complete" value="Complete registration" class="btn btn-primary" />
                    </div>
                    <div class="form-group pull-left">
                        <input type="submit" name="submit" id="AddVolunteer" value="Add a volunteer" class="btn btn-primary" />
                    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
