@model SNCRegistration.ViewModels.Volunteer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

<h2>Edit Volunteer</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @*<div class="form-horizontal">*@
        <h4>Volunteer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VolunteerID)

        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.VolunteerFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VolunteerFirstName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.VolunteerLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VolunteerLastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerAge)
            @Html.DropDownListFor(model => model.VolunteerAge,
                    ViewBag.AgeID as SelectList, new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.VolunteerAge, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
           
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.VolunteerShirtOrder, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.VolunteerShirtOrder, "", new { @class = "text-danger" })
                @if (Model.VolunteerShirtOrder == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.VolunteerShirtOrder, "True", new { name = "VolunteerShirtOrder" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.VolunteerShirtOrder, "False", new { name = "VolunteerShirtOrder" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.VolunteerShirtOrder, "True", new { name = "VolunteerShirtOrder" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.VolunteerShirtOrder, "False", new { name = "VolunteerShirtOrder" }) No
                    </label>

                }
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerShirtSize, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.VolunteerShirtSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerShirtSize, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerAttendingCode)
            @Html.DropDownListFor(model => model.VolunteerAttendingCode,
                    ViewBag.AttendanceID as SelectList, new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.VolunteerAttendingCode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.SaturdayDinner, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.SaturdayDinner, "", new { @class = "text-danger" })
                @if (Model.SaturdayDinner == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.SaturdayDinner, "True", new { name = "SaturdayDinner" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.SaturdayDinner, "False", new { name = "SaturdayDinner" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.SaturdayDinner, "True", new { name = "SaturdayDinner" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.SaturdayDinner, "False", new { name = "SaturdayDinner" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.CheckedIn, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.CheckedIn, "", new { @class = "text-danger" })
                @if (Model.CheckedIn == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.CheckedIn, "True", new { name = "CheckedIn" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.CheckedIn, "False", new { name = "CheckedIn" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.CheckedIn, "True", new { name = "CheckedIn" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.CheckedIn, "False", new { name = "CheckedIn" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitChapterNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.UnitChapterNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitChapterNumber, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>

        <hr />

        <div class="form-group pull-left">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>

            <div class="form-group pull-right">
                @Html.ActionLink("Back to Volunteer Details", "Details", "LeadContacts", new { id = Model.VolunteerID }, new { @class = "btn btn-info" })
            </div>


}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
