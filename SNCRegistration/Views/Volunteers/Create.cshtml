<script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>
<script type="text/javascript">
    //require number of people in tent if selected that tent is required
    $(document).ready(function () {
        $("#ShirtSize").hide();

        $("#ShirtOrder").change(function () {
            var status = ($('input[name=VolunteerShirtOrder]:checked').val());
            if ($('input[name=VolunteerShirtOrder]:checked').val() == 'True') {
                $("#ShirtSize").show();
            }
            else {
                $("#ShirtSize").hide();
            }
        });
    });

</script>


@model SNCRegistration.ViewModels.Volunteer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutV_Register.cshtml";
}


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()


        <h4>Volunteer Information</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VolunteerID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.VolunteerID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VolunteerID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    -->
    @Html.LabelFor(model => model.VolunteerFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">
        
        <div class="col-md-9">
            @Html.EditorFor(model => model.VolunteerFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VolunteerFirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    @Html.LabelFor(model => model.VolunteerLastName, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">
        <div class="col-md-9">
            @Html.EditorFor(model => model.VolunteerLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VolunteerLastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.VolunteerAge, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.VolunteerAge,
        ViewBag.Age as SelectList
            //new List<SelectListItem>{
            //    new SelectListItem{ Value = "", Text = "-Select Age-" },
            //    new SelectListItem{ Value = "1", Text = "Under 6" },
            //    new SelectListItem{ Value = "2", Text = "7-10" },
            //    new SelectListItem{ Value = "3", Text = "11-13" },
            //    new SelectListItem{ Value = "4", Text = "14-17" },
            //    new SelectListItem{ Value = "5", Text = "18-20" },
            //    new SelectListItem{ Value = "6", Text = "Over 21" }
            , new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.VolunteerAge, "", new { @class = "text-danger" })
    </div>
<!--
    <br />
    @Html.LabelFor(model => model.LeadContactID, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">
      
        <div class="col-md-9">
            @Html.DisplayFor(model => model.LeadContactID, new { @Value = (Session["lSession"]) })
            @Html.ValidationMessageFor(model => model.LeadContactID, "", new { @class = "text-danger" })
        </div>
    </div>
-->
    <br />
    <div class="form-group">
        <div class="btn-group" data-toggle="buttons" id="ShirtOrder">
            @Html.LabelFor(model => model.VolunteerShirtOrder, htmlAttributes: new { @class = "control-label" })<br />
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.VolunteerShirtOrder, true, new { @id = "chkYes", @name = "reqShirt"}) Yes
            </label>
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.VolunteerShirtOrder, false, new { @id = "chkNo", @name = "reqShirt" }) No
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.VolunteerShirtOrder, "", new { @class = "text-danger" })
    </div>
    <br />

         <div class="form-group" id="ShirtSize">
    @Html.LabelFor(model => model.VolunteerShirtSize, htmlAttributes: new { @class = "control-label" })
    @Html.DropDownListFor(model => model.VolunteerShirtSize,
     ViewBag.ShirtSizes as SelectList
            //new List<SelectListItem>{
            //    new SelectListItem{ Value = "00", Text = "-Select Size-" },
            //     new SelectListItem{ Value = "YXS", Text = "Youth - Extra Small" },
            //    new SelectListItem{ Value = "YS", Text = "Youth - Small" },
            //    new SelectListItem{ Value = "YM", Text = "Youth - Medium" },
            //    new SelectListItem{ Value = "YL", Text = "Youth - Large" },
            //    new SelectListItem{ Value = "YXL", Text = "Youth - Extra Large" },
            //    new SelectListItem{ Value = "AXS", Text = "Adult - Extra Small" },
            //    new SelectListItem{ Value = "AS", Text = "Adult - Small" },
            //    new SelectListItem{ Value = "AM", Text = "Adult - Medium" },
            //    new SelectListItem{ Value = "AL", Text = "Adult - Large" },
            //    new SelectListItem{ Value = "AXL", Text = "Adult - Extra Large" }
    , new { @class = "form-control", style = "width: 220px" })
    @Html.ValidationMessageFor(model => model.VolunteerShirtSize, "", new { @class = "text-danger" })
</div>
  

    <br />
        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerAttendingCode, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.VolunteerAttendingCode,
            ViewBag.Attendance as SelectList
            //new List<SelectListItem>{
            //    new SelectListItem{ Value = "", Text = "-Select-" },
            //    new SelectListItem{ Value = "1", Text = "Friday Evening Only" },
            //    new SelectListItem{ Value = "2", Text = "Saturday Only" },
            //    new SelectListItem{ Value = "4", Text = "Friday through Sunday" }
            , new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.VolunteerAttendingCode, "", new { @class = "text-danger" })
        </div>
        <br />
        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.SaturdayDinner, htmlAttributes: new { @class = "control-label" })<br />
                <label class="btn btn-default">
                    @Html.RadioButtonFor(model => model.SaturdayDinner, true, new { id = "saturday_Dinner_True" }) Yes
                </label>
                <label class="btn btn-default">
                    @Html.RadioButtonFor(model => model.SaturdayDinner, false, new { id = "saturday_Dinner_False" }) No
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.SaturdayDinner, "", new { @class = "text-danger" })
        </div>
    <br />
    @Html.LabelFor(model => model.UnitChapterNumber, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">

        <div class="col-md-9">
            @Html.EditorFor(model => model.UnitChapterNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitChapterNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="row">

        <div class="col-md-9">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />

    <div class="form-group pull-right">
        <input type="reset" value="Reset Form" class="btn btn-danger" onsubmit="Dispose" />
    </div>

    <div class="form-group pull-left">
        <input type="submit" name="submit" id="Complete" value="Complete registration" class="btn btn-primary" />
    </div>
   <div class="form-group pull-left">
        <input type="submit" name="submit" id="AddVolunteer" value="Add an additional volunteer" class="btn btn-primary" />
    </div>

    <!-- <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LeaderGuid, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.LeaderGuid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LeaderGuid, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    -->

    @Html.HiddenFor(model => model.LeaderGuid, new { @Value = 0 })
    @Html.HiddenFor(model => model.EventYear, new { @Value = 0 })
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}