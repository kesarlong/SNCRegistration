<script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>
<script type="text/javascript">
    //require number of people in tent if selected that tent is required
    $(document).ready(function () {
        $("#ShirtSize").hide();

        $("#ShirtOrder").change(function () {
            var status = ($('input[name=VolunteerShirtOrder]:checked').val());
            if ($('input[name=VolunteerShirtOrder]:checked').val() == 'True') {
                $("#ShirtSize").show();
            }
            else {
                $("#ShirtSize").hide();
            }
        });
    });

</script>

<script type="text/javascript">
    //hide Satuday Dinner field if selected that attending Friday only or Saturday
    $(document).ready(function () {
        $("#Dinner").hide();
        $("#Attending").change(function () {
            $(this).find("option:selected").each(function () {
                var optValue = $(this).attr("value");
                if (optValue == 2) {
                    $("#Dinner").show();

                } else {
                    $("#Dinner").hide();

                }
            });
        }).change();
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#UnitChapterNumber").hide();
        $("#BSType").change(function () {
            $(this).find("option:selected").each(function () {
                var optionValue = $(this).attr("value");
                if (optionValue >= 3) {
                    $("#UnitChapterNumber").hide();

                } else {
                    $("#UnitChapterNumber").show();
                }
            });
        }).change();
    });

</script>


@model SNCRegistration.ViewModels.Volunteer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutV_Register.cshtml";
}


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()


    <h4>Volunteer Information</h4><hr />
    <h5><font color="red">All fields not indicated as optional are required</font></h5>
        <p>
            <font color="grey">
                1. For Troop/Chapter leaders:<br />
        <p style="text-indent: 20px">a. Enter information for each volunteer being registered.<br />
        <p style="text-indent: 20px">
            b. Complete registration button will save your input and complete the registration process.<br />
            2. For Individuals:
        <p style="text-indent: 20px">a. Enter information for the volunteer being registered.<br />
        <p style="text-indent: 20px">
            b. Complete registration button will save your input and complete the registration process.<br />
            <br />
            </font>
        </p>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.VolunteerID, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DisplayFor(model => model.VolunteerID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VolunteerID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        -->
        @Html.LabelFor(model => model.VolunteerFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="row">

            <div class="col-md-9">
                @Html.EditorFor(model => model.VolunteerFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerFirstName, "", new { @class = "text-danger" })
            </div>
        </div>
            <br />
            @Html.LabelFor(model => model.VolunteerLastName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="row">
                <div class="col-md-9">
                    @Html.EditorFor(model => model.VolunteerLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VolunteerLastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.VolunteerAge, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.VolunteerAge,
        ViewBag.Age as SelectList, "- Select option - "
            , new { @class = "form-control", style = "width: 220px" })
                @Html.ValidationMessageFor(model => model.VolunteerAge, "", new { @class = "text-danger" })
            </div>
            <!--
                <br />
                @Html.LabelFor(model => model.LeadContactID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="row">

                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.LeadContactID, new { @Value = (Session["lSession"]) })
                        @Html.ValidationMessageFor(model => model.LeadContactID, "", new { @class = "text-danger" })
                    </div>
                </div>
            -->
            <br />
            <div class="form-group">
                <div class="btn-group" data-toggle="buttons" id="ShirtOrder">
                    @Html.LabelFor(model => model.VolunteerShirtOrder, htmlAttributes: new { @class = "control-label" })<br />
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.VolunteerShirtOrder, true, new { @id = "chkYes", @name = "reqShirt" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.VolunteerShirtOrder, false, new { @id = "chkNo", @name = "reqShirt" }) No
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.VolunteerShirtOrder, "", new { @class = "text-danger" })
            </div>
            <br />

            <div class="form-group" id="ShirtSize">
                @Html.LabelFor(model => model.VolunteerShirtSize, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.VolunteerShirtSize, ViewBag.ShirtSizes as SelectList
                    ,new { @class = "form-control", style = "width: 220px" })
                @Html.ValidationMessageFor(model => model.VolunteerShirtSize, "", new { @class = "text-danger" })
            </div>


            <br />
            <div class="form-group" id="Attending">
                @Html.LabelFor(model => model.VolunteerAttendingCode, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.VolunteerAttendingCode,
            ViewBag.Attendance as SelectList, "- Select option - "
            , new { @class = "form-control", style = "width: 220px" })
                @Html.ValidationMessageFor(model => model.VolunteerAttendingCode, "", new { @class = "text-danger" })
            </div>
            <br />

            <div class="form-group">
                <div class="btn-group" data-toggle="buttons" id="Dinner">
                    @Html.LabelFor(model => model.SaturdayDinner, htmlAttributes: new { @class = "control-label" })<br />
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.SaturdayDinner, true, new { id = "saturday_Dinner_True" }) Yes
                    </label>
                    <label class="btn btn-default">
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.SaturdayDinner, "", new { @class = "text-danger" })
            </div>
            <br />

            <br />
            <div class="form-group" id="BSType">
                @Html.LabelFor(model => model.BSType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.BSType,
                        ViewBag.BSType as SelectList, "- Select option - "
                        //new List<SelectListItem>{
                        //    new SelectListItem{ Value = "", Text = "-Select Type-" },
                        //    new SelectListItem{ Value = "1", Text = "Troop/Crew" },
                        //    new SelectListItem{ Value = "2", Text = "OA Chapter" },
                        //    new SelectListItem{ Value = "3", Text = "Individual" }
                        , new { @class = "form-control", style = "width: 200px" })
                @Html.ValidationMessageFor(model => model.BSType, "", new { @class = "text-danger" })
            </div>
            <br />
                <div class="row" id="UnitChapterNumber">
                    @Html.LabelFor(model => model.UnitChapterNumber, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UnitChapterNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitChapterNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="row">

                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <hr />

                    <div class="form-group pull-right">
                        <input type="button" name="Cancel" id="Cancel" value="Cancel" class="btn btn-danger" onclick="@("window.location.href='" + @Url.Action("Redirect", "Volunteers") + "'");" />
                    </div>

                    <div class="form-group pull-left">
                        <input type="submit" name="submit" id="Complete" value="Complete registration" class="btn btn-primary" />
                    </div>
                    <div class="form-group pull-left">
                        <input type="submit" name="submit" id="AddVolunteer" value="Add an additional volunteer" class="btn btn-primary" onclick="location.href='@Url.Action("Create", new { LeadContactID = ViewBag.LeadContactID } )'" />
                    </div>
                    <div class="form-group pull-left">
                        <input type="button" name="submit" id="ViewVolunteers" value="View volunteers I have registered" class="btn btn-primary" onclick="location.href='@Url.Action("VolunteersRegisteredView", new { LeadContactID = ViewBag.LeadContactID } )'" />
                    </div>


                    @*@Html.LabelFor(model => model.LeaderGuid, htmlAttributes: new { @class = "control-label col-md-3" })*@

                    @*@Html.DisplayFor(model => model.LeaderGuid, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.LeaderGuid, "", new { @class = "text-danger" })


                    @Html.HiddenFor(model => model.LeaderGuid, new { @Value = 0 })
                    @Html.HiddenFor(model => model.EventYear, new { @Value = 0 })
                    @Html.HiddenFor(model => model.VolunteerFee, new { @Value = 0 })
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}