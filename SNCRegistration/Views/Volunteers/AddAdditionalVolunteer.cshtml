@model SNCRegistration.ViewModels.Volunteer

@{
    ViewBag.Title = "Add Additional Volunteer";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()


    <h4>Add Additional Volunteer</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.LeadContactID, new { @Value = Session["lIDSession"] })
        @Html.HiddenFor(model => model.LeaderGuid, new { @Value = Session["lGuidSession"] })

        @Html.LabelFor(model => model.VolunteerFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="row">

            <div class="col-md-9">
                @Html.EditorFor(model => model.VolunteerFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerFirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        @Html.LabelFor(model => model.VolunteerLastName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="row">
            <div class="col-md-9">
                @Html.EditorFor(model => model.VolunteerLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerLastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerAge, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.VolunteerAge,
        ViewBag.Age as SelectList, "- Select option - "
            , new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.VolunteerAge, "", new { @class = "text-danger" })
        </div>
        <!--
            <br />
            @Html.LabelFor(model => model.LeadContactID, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="row">

                <div class="col-md-9">
                    @Html.DisplayFor(model => model.LeadContactID, new { @Value = (Session["lSession"]) })
                    @Html.ValidationMessageFor(model => model.LeadContactID, "", new { @class = "text-danger" })
                </div>
            </div>
        -->
        <br />
        <div class="form-group">
            <div class="btn-group" data-toggle="buttons" id="ShirtOrder">
                @Html.LabelFor(model => model.VolunteerShirtOrder, htmlAttributes: new { @class = "control-label" })<br />
                <label class="btn btn-default">
                    @Html.RadioButtonFor(model => model.VolunteerShirtOrder, true, new { @id = "chkYes", @name = "reqShirt" }) Yes
                </label>
                <label class="btn btn-default">
                    @Html.RadioButtonFor(model => model.VolunteerShirtOrder, false, new { @id = "chkNo", @name = "reqShirt" }) No
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.VolunteerShirtOrder, "", new { @class = "text-danger" })
        </div>
        <br />

        <div class="form-group" id="ShirtSize">
            @Html.LabelFor(model => model.VolunteerShirtSize, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.VolunteerShirtSize,
     ViewBag.ShirtSizes as SelectList
    , new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.VolunteerShirtSize, "", new { @class = "text-danger" })
        </div>


        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.VolunteerAttendingCode, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.VolunteerAttendingCode,
            ViewBag.Attendance as SelectList, "- Select option - "
            , new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.VolunteerAttendingCode, "", new { @class = "text-danger" })
        </div>
        <br />
        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.SaturdayDinner, htmlAttributes: new { @class = "control-label" })<br />
                <label class="btn btn-default">
                    @Html.RadioButtonFor(model => model.SaturdayDinner, true, new { id = "saturday_Dinner_True" }) Yes
                </label>
                <label class="btn btn-default">
                    @Html.RadioButtonFor(model => model.SaturdayDinner, false, new { id = "saturday_Dinner_False" }) No
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.SaturdayDinner, "", new { @class = "text-danger" })
        </div>
        <br />
        @Html.LabelFor(model => model.UnitChapterNumber, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="row">

            <div class="col-md-9">
                @Html.EditorFor(model => model.UnitChapterNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitChapterNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="row">

            <div class="col-md-9">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.LeaderGuid, new { @Value = 0 })
        @Html.HiddenFor(model => model.EventYear, new { @Value = 0 })
        @Html.HiddenFor(model => model.VolunteerFee, new { @Value = 0 })
        <hr />

        <div class="form-group pull-left">
            <input type="submit" name="submit" id="Complete" value="Add Additional Volunteer" class="btn btn-primary" />
        </div>

        <div class="form-group pull-right">
            @Html.ActionLink("Back to Lead Contact Details", "Details", "LeadContacts", new { id = Session["lIDSession"] }, new { @class = "btn btn-info" })

        </div>



}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}