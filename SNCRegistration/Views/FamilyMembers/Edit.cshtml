@model SNCRegistration.ViewModels.FamilyMember

@{
    ViewBag.Title = "Edit Family Member";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

<h2>Edit Family Member</h2>
<div>
    @if (TempData["notice"] != null)
{<p style="color:green;">@TempData["notice"]</p> }
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FamilyMemberID)

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyMemberFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.FamilyMemberFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FamilyMemberFirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyMemberLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.FamilyMemberLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FamilyMemberLastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.HealthForm, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.HealthForm, "", new { @class = "text-danger" })
                @if (Model.HealthForm == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.HealthForm, "True", new { name = "HealthForm" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.HealthForm, "False", new { name = "HealthForm" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.HealthForm, "True", new { name = "HealthForm" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.HealthForm, "False", new { name = "HealthForm" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.PhotoAck, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.PhotoAck, "", new { @class = "text-danger" })
                @if (Model.PhotoAck == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.PhotoAck, "True", new { name = "PhotoAck" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.PhotoAck, "False", new { name = "PhotoAck" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.PhotoAck, "True", new { name = "PhotoAck" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.PhotoAck, "False", new { name = "PhotoAck" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttendingCode)
            @Html.DropDownListFor(model => model.AttendingCode,
                    new List<SelectListItem>{
                        new SelectListItem{ Value = "", Text = "-Select-" },
                        new SelectListItem{ Value = "2", Text = "Saturday Only" },
                        new SelectListItem{ Value = "3", Text = "Overnight" }
                    }, new { @class = "form-control", style = "width: 220px" })
            @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>

        <div class="form-group pull-left" style="margin-left:20px;">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
        <div class="form-group pull-right" style="margin-right:20px;">
            @Html.ActionLink("Back to Guardian Details", "Details", "Guardians", new { id = Model.GuardianID }, new { @class = "btn btn-info" })
        </div>


}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
