@model SNCRegistration.ViewModels.FamilyMember
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Additional Attendees</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.FamilyMemberFirstName, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.FamilyMemberFirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FamilyMemberFirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FamilyMemberLastName, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.FamilyMemberLastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FamilyMemberLastName, "", new { @class = "text-danger" })
    </div>

    //TO DO: normalize data - Jira 316
    <div class="form-group">
        @Html.LabelFor(model => model.FamilyMemberAge, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.FamilyMemberAge,
            ViewBag.Age as SelectList, "-Select option-", new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.FamilyMemberAge, "", new { @class = "text-danger" })
    </div>

    //DO TO: update to use data from Attendance table (Jira SP-306)

    //TO DO: Jira-306 - change to look up values from attendance table
    <div class="form-group">
        @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.AttendingCode,
         ViewBag.Attendance as SelectList, "-Select option-", new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })<br />
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
    </div>

    <!--Set default values for check box fields not displayed on form-->
    @Html.HiddenFor(model => model.HealthForm, new { @Value = false })
    @Html.HiddenFor(model => model.PhotoAck, new { @Value = false })
    @Html.HiddenFor(model=> model.CheckedIn, new { @value = false})

    <hr />

    //Buttons to direct next form action

    //complete registration
    <div class="form-group pull-left">
        <input type="submit" name="submit" id="Complete" value="Complete registration" class="btn btn-primary" />
    </div>


    //add another participant
    <div class="form-group pull-left">
        <input type="submit" name="submit" id="addParticipant" value="Add another participant" class="btn btn-primary" />
    </div>

    //add a family member (non-participant) attendig
    <div class="form-group pull-left">
        <input type="submit" name="submit" id="AddFamily" value="Add a family member" class="btn btn-primary" />
    </div>



    <div class="form-group pull-right">
        <input type="button" name="Cancel" id="Cancel" value="Cancel" class="btn btn-danger" onclick="@("window.location.href='" + @Url.Action("Redirect", "Participants") + "'");" />
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
