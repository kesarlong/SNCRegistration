@model SNCRegistration.ViewModels.Guardian


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()


    <h4>Guardian / Sponsor Information</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.GuardianFirstName, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.GuardianFirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianFirstName, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianLastName, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.GuardianLastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianLastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianAddress, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.GuardianAddress, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianAddress, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianCity, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.GuardianCity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianCity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianState, htmlAttributes: new { @class = "control-label" })<br />
        @Html.DropDownListFor(model => model.GuardianState,
             new List<SelectListItem>
             {
                 new SelectListItem() {Text="Alabama", Value="AL"},
                    new SelectListItem() { Text="Alaska", Value="AK"},
                    new SelectListItem() { Text="Arizona", Value="AZ"},
                    new SelectListItem() { Text="Arkansas", Value="AR"},
                    new SelectListItem() { Text="California", Value="CA"},
                    new SelectListItem() { Text="Colorado", Value="CO"},
                    new SelectListItem() { Text="Connecticut", Value="CT"},
                    new SelectListItem() { Text="District of Columbia", Value="DC"},
                    new SelectListItem() { Text="Delaware", Value="DE"},
                    new SelectListItem() { Text="Florida", Value="FL", Selected=true},
                    new SelectListItem() { Text="Georgia", Value="GA"},
                    new SelectListItem() { Text="Hawaii", Value="HI"},
                    new SelectListItem() { Text="Idaho", Value="ID"},
                    new SelectListItem() { Text="Illinois", Value="IL"},
                    new SelectListItem() { Text="Indiana", Value="IN"},
                    new SelectListItem() { Text="Iowa", Value="IA"},
                    new SelectListItem() { Text="Kansas", Value="KS"},
                    new SelectListItem() { Text="Kentucky", Value="KY"},
                    new SelectListItem() { Text="Louisiana", Value="LA"},
                    new SelectListItem() { Text="Maine", Value="ME"},
                    new SelectListItem() { Text="Maryland", Value="MD"},
                    new SelectListItem() { Text="Massachusetts", Value="MA"},
                    new SelectListItem() { Text="Michigan", Value="MI"},
                    new SelectListItem() { Text="Minnesota", Value="MN"},
                    new SelectListItem() { Text="Mississippi", Value="MS"},
                    new SelectListItem() { Text="Missouri", Value="MO"},
                    new SelectListItem() { Text="Montana", Value="MT"},
                    new SelectListItem() { Text="Nebraska", Value="NE"},
                    new SelectListItem() { Text="Nevada", Value="NV"},
                    new SelectListItem() { Text="New Hampshire", Value="NH"},
                    new SelectListItem() { Text="New Jersey", Value="NJ"},
                    new SelectListItem() { Text="New Mexico", Value="NM"},
                    new SelectListItem() { Text="New York", Value="NY"},
                    new SelectListItem() { Text="North Carolina", Value="NC"},
                    new SelectListItem() { Text="North Dakota", Value="ND"},
                    new SelectListItem() { Text="Ohio", Value="OH"},
                    new SelectListItem() { Text="Oklahoma", Value="OK"},
                    new SelectListItem() { Text="Oregon", Value="OR"},
                    new SelectListItem() { Text="Pennsylvania", Value="PA"},
                    new SelectListItem() { Text="Rhode Island", Value="RI"},
                    new SelectListItem() { Text="South Carolina", Value="SC"},
                    new SelectListItem() { Text="South Dakota", Value="SD"},
                    new SelectListItem() { Text="Tennessee", Value="TN"},
                    new SelectListItem() { Text="Texas", Value="TX"},
                    new SelectListItem() { Text="Utah", Value="UT"},
                    new SelectListItem() { Text="Vermont", Value="VT"},
                    new SelectListItem() { Text="Virginia", Value="VA"},
                    new SelectListItem() { Text="Washington", Value="WA"},
                    new SelectListItem() { Text="West Virginia", Value="WV"},
                    new SelectListItem() { Text="Wisconsin", Value="WI"},
                    new SelectListItem() { Text="Wyoming", Value="WY"}
                    }, new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.GuardianState, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianZip, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.GuardianZip, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianZip, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label" })<br />

       @* //TO DO: USE THE DATA SOURCE FOR ATTENDANCE (SP-316)*@
        @Html.DropDownListFor(model => model.Relationship,
          new List<SelectListItem>{
            new SelectListItem(){ Text="---Select---", Value = "", Selected=true },
            new SelectListItem(){ Value = "1", Text = "Mother / Father" },
            new SelectListItem(){ Value = "2", Text = "Legal Guardian"},
            new SelectListItem(){ Value = "3", Text = "Sister / Brother"},
            new SelectListItem(){ Value = "4", Text = "Grandmother / Grandfather"},
            new SelectListItem(){ Value = "5", Text = "Teacher / Instructor"},
            new SelectListItem(){ Value = "6", Text = "Other - Family - relationship not listed"},
            new SelectListItem(){ Value = "7", Text = "Other (please provide details in comments section"}
        }, new { @class = "form-control", style = "width: 320px" })


        @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
     </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianEmail, htmlAttributes: new { @class = "control-label" })<br />
        @Html.EditorFor(model => model.GuardianEmail, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GuardianEmail, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GuardianCellPhone, htmlAttributes: new { @class = "control-label" })<br />
        @Html.DisplayFor(m => m.GuardianCellPhone)
        @Html.EditorFor(model => model.GuardianCellPhone, new { htmlAttributes = new { @class = "form-control", placeholder = "1235555555" } })
        @Html.ValidationMessageFor(model => model.GuardianCellPhone, "", new { @class = "text-danger" })
    </div>

    //TO DO: Jira-306 - change to look up values from attendance table
    <div class="form-group">
        @Html.LabelFor(model => model.AttendingCode, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.AttendingCode,
            new List<SelectListItem>{
                new SelectListItem{ Value = "", Text = "-Select-" },
                new SelectListItem{ Value = "2", Text = "Saturday Only" },
                new SelectListItem{ Value = "3", Text = "Overnight" }
            }, new { @class = "form-control", style = "width: 220px" })
        @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="btn-group" data-toggle="buttons">
            @Html.LabelFor(model => model.Tent, htmlAttributes: new { @class = "control-label" })<br />
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.Tent, true, new { id = "radio_Tent_True" }) Yes
            </label>
            <label class="btn btn-default">
                @Html.RadioButtonFor(model => model.Tent, false, new { id = "radio_Tent_False" }) No
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.Tent, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })<br />
        @Html.TextArea("Comments", null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
    </div>


        <!--Set default values for check box fields not displayed on form-->
    @Html.HiddenFor(model => model.HealthForm, new { @Value = false })
    @Html.HiddenFor(model => model.PhotoAck, new { @Value = false })



    <hr />
    
        <div class="form-group pull-left">
            <input type="submit" value="Create" class="btn btn-primary" onsubmit="Submitted" />
        </div>

        <div class="form-group pull-right">
            <input type="reset" value="Reset Form" class="btn btn-danger" onsubmit="Cancel"/>
        </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
