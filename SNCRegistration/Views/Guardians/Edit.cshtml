@model SNCRegistration.ViewModels.Guardian

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

<h2>Edit Guardian</h2>
<div>
                @if (TempData["notice"] != null)
                {<p style="color:green;">@TempData["notice"]</p> }
        </div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GuardianID)

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianFirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianLastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianAddress, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianCity, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianCity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianCity, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianZip, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianZip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianZip, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianCellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianCellPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianCellPhone, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuardianEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.GuardianEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GuardianEmail, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.HealthForm, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.HealthForm, "", new { @class = "text-danger" })
                @if (Model.HealthForm == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.HealthForm, "True", new { name = "HealthForm" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.HealthForm, "False", new { name = "HealthForm" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.HealthForm, "True", new { name = "HealthForm" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.HealthForm, "False", new { name = "HealthForm" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.PhotoAck, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.PhotoAck, "", new { @class = "text-danger" })
                @if (Model.PhotoAck == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.PhotoAck, "True", new { name = "PhotoAck" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.PhotoAck, "False", new { name = "PhotoAck" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.PhotoAck, "True", new { name = "PhotoAck" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.PhotoAck, "False", new { name = "PhotoAck" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
          <div class="btn-group" data-toggle="buttons">
                @Html.LabelFor(model => model.Tent, htmlAttributes: new { @class = "control-label" })  <br />
                @Html.ValidationMessageFor(model => model.Tent, "", new { @class = "text-danger" })
                @if (Model.PhotoAck == true)
                {
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.Tent, "True", new { name = "Tent" }) Yes
                    </label>
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.Tent, "False", new { name = "Tent" }) No
                    </label>
                }
                else
                {
                    <label class="btn btn-default">
                        @Html.RadioButtonFor(model => model.Tent, "True", new { name = "Tent" }) Yes
                    </label>
                    <label class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.Tent, "False", new { name = "Tent" }) No
                    </label>

                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttendingCode)
            @Html.DropDownListFor(model => model.AttendingCode,
                    ViewBag.AttendanceID as SelectList, new { @class = "form-control", style = "width: 220px" })
                @Html.ValidationMessageFor(model => model.AttendingCode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Relationship)
            @Html.DropDownListFor(model => model.Relationship,
                    ViewBag.relationshipID as SelectList, new { @class = "form-control", style = "width: 475px" })
                @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>

        <hr />

            <div class="form-group pull-left" style="margin-left:20px;">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div class="form-group pull-right" style="margin-right:20px;">
                @Html.ActionLink("Back to Guardian Details", "Details", new { id = Model.GuardianID }, new { @class = "btn btn-info" })
            </div>
            

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
